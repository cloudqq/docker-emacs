#ARG VERSION=latest
FROM docker:dind

MAINTAINER cloudqq <cloudqq@gmail.com>

# Fix "Couldn't register with accessibility bus" error message
#ENV NO_AT_BRIDGE=1




RUN echo @edge http://nl.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories
RUN apk update \
  && apk add build-base \
#  font-config \
  gcc \
  wget \
  git \
  bash \
  dbus-x11 \
  alsa-lib-dev \
  aspell \
  aspell-en \
  autoconf \
  automake \
  curl \
  dpkg \
  dpkg-dev \
  fontconfig-dev \
  gawk \
  gconf-dev \
  giflib-dev \
  git \
  glib-dev \
  gnupg \
  gnutls-dev \
  gtk+3.0-dev \
  lcms2-dev \
  libcanberra-gtk3 \
  libjpeg-turbo-dev \
  libpng-dev \
  librsvg-dev \
  libxaw-dev \
  libxml2-dev \
  jansson-dev \
  ncurses-dev \
  openssh-client \
  pango-dev \
  paxmark \
  python \
  texinfo \
  tiff-dev \
  graphviz \
  the_silver_searcher \
#  gnupg2 \
#  rlwrap \
  msttcorefonts-installer \
  ttf-dejavu \
  ttf-droid \
  ttf-freefont \
  ttf-liberation \
  ttf-ubuntu-font-family \
  wqy-zenhei@edge \
  rlwrap@edge \
  emacs \
  && rm -rf /var/cache/apk/*

RUN mkdir -p /usr/local/sbin \
  && git clone https://github.com/ncopa/su-exec.git /tmp/su-exec \
  && cd /tmp/su-exec \
  && make \
  && chmod 770 su-exec \
  && mv ./su-exec /usr/local/sbin

COPY asEnvUser /usr/local/sbin/

RUN chown root /usr/local/sbin/asEnvUser \
  && chmod 700  /usr/local/sbin/asEnvUser

ENV UNAME="cloudqq" \
  GNAME="cloudqq" \
  UHOME="/home/cloudqq" \
  UID="1000" \
  GID="1000" \
  WORKSPACE="/mnt/workspace" \
  SHELL="/bin/bash"

ENV FONT_HOME="${UHOME}/.local/share/fonts"

RUN mkdir -p "{$FONT_HOME}/adobe-fonts/source-code-pro"

RUN (git clone \
  --branch release \
  --depth 1 \
  'https://github.com/adobe-fonts/source-code-pro.git' \
  "$FONT_HOME/adobe-fonts/source-code-pro" && \
  fc-cache -f -v "$FONT_HOME/adobe-fonts/source-code-pro")

RUN wget https://dl.google.com/go/go1.13.linux-amd64.tar.gz \
  && sudo tar xvf go1.13.linux-amd64.tar.gz \
  && sudo mv go /usr/local \
  &&  export GOROOT=/usr/local/go \
  && export GOPATH=/mnt/workspace/go \
  && export PATH=$GOPATH/bin:$GOROOT/bin:$PATH \
  && go env \
  && git clone --depth 1 https://github.com/junegunn/fzf.git /usr/local/fzf \
  && cd /usr/local/fzf \
  && make install \
  && ./install --all

ENV GOROOT=/usr/local/go
ENV GOPATH=/mnt/workspace/go
ENV PATH="${GOROOT}/bin:${GOROOT}/bin:/usr/local/fzf/bin:${PATH}"


#ENV DEBIAN_FRONTEND noninteractive

# basic stuff


CMD ["bash", "sh"]
